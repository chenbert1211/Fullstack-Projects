{"filter":false,"title":"tier-2.js","tooltip":"/Checkpoint-React-v2/tests/tier-2.js","undoManager":{"mark":4,"position":4,"stack":[[{"start":{"row":0,"column":0},"end":{"row":118,"column":0},"action":"remove","lines":["/* eslint-env mocha */","import React from 'react';","import { expect } from 'chai';","import { mount } from 'enzyme';","","import PetList from '../src/components/PetList';","import { valueOf } from './utils';","","/**"," * Tier 2 is about"," * - rendering a list"," * - handling a change event from a select"," * - setting state (string)"," * - filter a list of rendered components"," */","","/** Instructions:"," * Edit the PetList component in src/components/PetList.js"," * It will be passed an array of pet objects as props.pets"," * Pass each pet to a SinglePet component as a prop called `pet`"," * Create a dropdown that allows the user to select between three options:"," * - all (the default option)"," * - cats"," * - dogs"," * When the user selects a new option, set state accordingly"," * If the selected option is \"all\", render all the pets"," * If the selected option is \"cats\", render only the cats"," * If the selected option is \"dogs\", render only the dogs"," */","","describe('Tier 2: PetList component', () => {","  const pets = [","    {","      id: 1,","      name: 'Rigatoni',","      description: 'A flaming hot cheetoh in feline form',","      species: 'cat',","    },","    {","      id: 2,","      name: 'Cody',","      description: 'Adorable pug who loves to hug',","      species: 'dog',","    },","    {","      id: 3,","      name: 'Frankie',","      description: 'The snuggliest kitty',","      species: 'cat',","    },","    {","      id: 4,","      name: 'Anabelle',","      description: 'Might eat your couch',","      species: 'dog',","    },","  ];","","  it('renders a list of SinglePets', () => {","    const wrapper = mount(<PetList pets={pets} />);","    expect(wrapper).to.include.text('Rigatoni');","    expect(wrapper).to.include.text('Cody');","    expect(wrapper).to.include.text('Frankie');","    expect(wrapper).to.include.text('Anabelle');","  });","","  it('renders a select dropdown with three options: all, cats, dogs', () => {","    const wrapper = mount(<PetList pets={pets} />);","    const select = wrapper.find('select');","    const options = select.find('option');","    expect(options).to.have.lengthOf(3);","    const optionValues = options.map((option) => valueOf(option));","    expect(optionValues).to.include.members(['all', 'cats', 'dogs']);","  });","","  it(\"when the filter is set to 'cats', only render SinglePets with cats\", () => {","    const wrapper = mount(<PetList pets={pets} />);","","    // By default, the value of select should be \"all\"","    let select = wrapper.find('select');","","    // Simulate a user clicking the dropdown menu and selecting cats","    select.simulate('change', { target: { value: 'cats' } });","","    // Now, the value of select should be \"cats\"","    select = wrapper.find('select');","","    // We should expect to see Rigatoni and Frankie, but not Cody or Anabelle","    expect(wrapper).to.include.text('Rigatoni');","    expect(wrapper).to.not.include.text('Cody');","    expect(wrapper).to.include.text('Frankie');","    expect(wrapper).to.not.include.text('Anabelle');","  });","","  it(\"when the filter is set to 'dogs', only render SinglePets with dogs\", () => {","    const wrapper = mount(<PetList pets={pets} />);","","    // By default, the value of select should be \"all\"","    let select = wrapper.find('select');","    expect(select).to.have.value('all');","","    // Simulate a user clicking the dropdown menu and selecting dogs","    select.simulate('change', {","      target: {","        value: 'dogs',","      },","    });","","    // Now, the value of select should be \"dogs\"","    select = wrapper.find('select');","","    // We should expect to see Cody and Anabelle, but not Rigatoni or Frankie","    expect(wrapper).to.not.include.text('Rigatoni');","    expect(wrapper).to.include.text('Cody');","    expect(wrapper).to.not.include.text('Frankie');","    expect(wrapper).to.include.text('Anabelle');","  });","});",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":117,"column":3},"action":"insert","lines":["/* eslint-env mocha */","import React from 'react';","import { expect } from 'chai';","import { mount } from 'enzyme';","","import PetList from '../src/components/PetList';","import { valueOf } from './utils';","","/**"," * Tier 2 is about"," * - rendering a list"," * - handling a change event from a select"," * - setting state (string)"," * - filter a list of rendered components"," */","","/** Instructions:"," * Edit the PetList component in src/components/PetList.js"," * It will be passed an array of pet objects as props.pets"," * Pass each pet to a SinglePet component as a prop called `pet`"," * Create a dropdown that allows the user to select between three options:"," * - all (the default option)"," * - cats"," * - dogs"," * When the user selects a new option, set state accordingly"," * If the selected option is \"all\", render all the pets"," * If the selected option is \"cats\", render only the cats"," * If the selected option is \"dogs\", render only the dogs"," */","","describe('Tier 2: PetList component', () => {","  const pets = [","    {","      id: 1,","      name: 'Rigatoni',","      description: 'A flaming hot cheetoh in feline form',","      species: 'cat',","    },","    {","      id: 2,","      name: 'Cody',","      description: 'Adorable pug who loves to hug',","      species: 'dog',","    },","    {","      id: 3,","      name: 'Frankie',","      description: 'The snuggliest kitty',","      species: 'cat',","    },","    {","      id: 4,","      name: 'Anabelle',","      description: 'Might eat your couch',","      species: 'dog',","    },","  ];","","  xit('renders a list of SinglePets', () => {","    const wrapper = mount(<PetList pets={pets} />);","    expect(wrapper).to.include.text('Rigatoni');","    expect(wrapper).to.include.text('Cody');","    expect(wrapper).to.include.text('Frankie');","    expect(wrapper).to.include.text('Anabelle');","  });","","  xit('renders a select dropdown with three options: all, cats, dogs', () => {","    const wrapper = mount(<PetList pets={pets} />);","    const select = wrapper.find('select');","    const options = select.find('option');","    expect(options).to.have.lengthOf(3);","    const optionValues = options.map((option) => valueOf(option));","    expect(optionValues).to.include.members(['all', 'cats', 'dogs']);","  });","","  xit(\"when the filter is set to 'cats', only render SinglePets with cats\", () => {","    const wrapper = mount(<PetList pets={pets} />);","","    // By default, the value of select should be \"all\"","    let select = wrapper.find('select');","","    // Simulate a user clicking the dropdown menu and selecting cats","    select.simulate('change', { target: { value: 'cats' } });","","    // Now, the value of select should be \"cats\"","    select = wrapper.find('select');","","    // We should expect to see Rigatoni and Frankie, but not Cody or Anabelle","    expect(wrapper).to.include.text('Rigatoni');","    expect(wrapper).to.not.include.text('Cody');","    expect(wrapper).to.include.text('Frankie');","    expect(wrapper).to.not.include.text('Anabelle');","  });","","  xit(\"when the filter is set to 'dogs', only render SinglePets with dogs\", () => {","    const wrapper = mount(<PetList pets={pets} />);","","    // By default, the value of select should be \"all\"","    let select = wrapper.find('select');","    expect(select).to.have.value('all');","","    // Simulate a user clicking the dropdown menu and selecting dogs","    select.simulate('change', {","      target: {","        value: 'dogs',","      },","    });","","    // Now, the value of select should be \"dogs\"","    select = wrapper.find('select');","","    // We should expect to see Cody and Anabelle, but not Rigatoni or Frankie","    expect(wrapper).to.not.include.text('Rigatoni');","    expect(wrapper).to.include.text('Cody');","    expect(wrapper).to.not.include.text('Frankie');","    expect(wrapper).to.include.text('Anabelle');","  });","});"]}],[{"start":{"row":58,"column":2},"end":{"row":58,"column":3},"action":"remove","lines":["x"],"id":3}],[{"start":{"row":66,"column":2},"end":{"row":66,"column":3},"action":"remove","lines":["x"],"id":5}],[{"start":{"row":75,"column":2},"end":{"row":75,"column":3},"action":"remove","lines":["x"],"id":6}],[{"start":{"row":94,"column":2},"end":{"row":94,"column":3},"action":"remove","lines":["x"],"id":7}]]},"ace":{"folds":[],"scrolltop":1320,"scrollleft":0,"selection":{"start":{"row":94,"column":2},"end":{"row":94,"column":2},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":6,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1657481492106,"hash":"6083c83481fdbab7350db9b44e857828d50c6082"}